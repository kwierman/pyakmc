[project]
name = "pyakmc"
version = "0.1.0"
description = "Python Monte Carlo Framework"
authors = [
    {name = "kwierman",email = "kwierman@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "typer (>=0.16.0,<0.17.0)"
]

[project.scripts]
pyakmc = "pyakmc.cli:app"

[tool.poetry]

[tool.poetry.group.dev.dependencies]
isort = "^6.0.1"
mypy = "^1.16.1"
pre-commit = "^4.2.0"
pydocstyle = "^6.3.0"
pylint = "^3.3.7"
pytest = "^8.4.1"
pyupgrade = "^3.20.0"
coverage = "^7.9.1"
coverage-badge = "^1.1.2"
pytest-html = "^4.1.1"
pytest-cov = "^6.2.1"
black = "^25.1.0"
darglint = "^1.8.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "pyakmc"

[coverage.run]
branch = true
#omit = ["pyakmc/cli.py"]

[tool.coverage.report]
exclude_also = [
    'def __repr__',
    'if self.debug:',
    'if settings.DEBUG',
    'raise AssertionError',
    'raise NotImplementedError',
    'if 0:',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
    "def synthesize",
    "def cli",
    "class Base",
]
